예제에 맞춰 푸느라고 너무 엣지 케이스가 많아 코드가 지저분하고 좋지 못한 알고리즘이 되어버렸다.
기본 아이디어는 아스키 코드를 이용하는 것이다.
맨 앞의 ' ' 과 '0'을 공백처리했고, +, -, num 이 공백 외에 처음 나오면 그것은 무조건 return 0 였다.
만약 부호가 나온다면 부호를 마크하고 그 뒤로부터 숫자를 읽었다.
first 를 이때 마크하고 숫자가 아닌 부분이 나오면 그 인덱스를 end 로 하여
어레이를 first 부터 end 까지 쪼갠 후 
아스키 코드 변환식을 이용해서 숫자로 바꾸어 digit 에 맞게끔 계산후 합했다.
Overflow 를 처리하는 것이 매우 복잡했는데, 보통 digit 이 바뀌면 overflow 경우이다.
하지만 정말 큰 숫자는 이를 통해 해결하기가 너무 어려워 혼란스러운 로직이 많이 들어있다.
